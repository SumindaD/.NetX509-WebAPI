namespace SurityTrial.Migrations
{
    using SurityTrial.Models;
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Migrations;
    using System.Linq;

    internal sealed class Configuration : DbMigrationsConfiguration<SurityTrial.Context.SurityDBContext>
    {
        public Configuration()
        {
            AutomaticMigrationsEnabled = true;
        }

        protected override void Seed(SurityTrial.Context.SurityDBContext context)
        {
            var privateKeyBase64 = "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";
            var publicKeyBase64 = "MIIEzgIBAzCCBIoGCSqGSIb3DQEHAaCCBHsEggR3MIIEczCCBG8GCSqGSIb3DQEHBqCCBGAwggRcAgEAMIIEVQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIApSX2XiagD8CAgfQgIIEKGqz84jo8RtJmuzBwNx4eMQT8YckxJUypyLZ22qsw1pYT4Vfhcef63cEL8Xz/H2hWH5NVxWwSkgqD5bePONbzqhzOlO5N2HpNvS2rVwO9MeSr3CzS1uuMRBla0D9upvHqMWDV8LV5wq8ah48huKj9AinbS7FpTrNjKockM9r04qDEvNLfGl21U96wklbnGRH1SE3kjVOZw7oDeKM7odbYXTXOi/v7F97z+9OpZl7qPzCWVQbbfcZun/GWskYkrJcew5y2FgwUQO8vuR7bHG/NFXbGi2To4m7CoUvvNppEzqxPr4ngLBHgP+h9yPrUyldmUPgt/SYkL3vLPUGX5fSdClNHODdW0b2gQtnAaSfBqeNDAg+LkvJ+UMxF70lgrUgk4EGefpriY5PxCEe62efP8aCJ3lvXLv4A2Ohg4Kg0loMutoYjJaCRA040Pi3MdB3JsVIXpryHza1oybeP1LvD5PZekmHjqy0KOPzHiQJ2h4uMg4OWJO8ln7oj3e/gzJi0Kt0c1IoPzomZn6t2bMCzZD1kFGIJJv8ivYQdBGPTKft90xButfd+YU45hX/4KQ4w+GH0ouO87f/GEM3RpWrn9jX1MWRpmQn88WCbSr+5SNzR9gIOEErRgIh3nGgO2Fq4pFrLUSrz513bm19ajUXFBIHHUL2a78Q3Co9rT5Mr37gnoK4r6Jes1LJx518JfaqQbmL+drU/GxVLGe2m+2oGQQx3zA9DpFiq+jOMyM8gexJ4tBE0rntU++Z0YbdCrSwqcLko6Zi0XimT4Q3Ja5Uv9IdNBVPpZJbMj6GbAA3caXuCmYQS8WUBxR0MGOMvRdqrW3omJ9atPu9BtxnySWiyQMAWLm0VQYoYRqyIJyAq1SHXHOSRvAp/aLYKYV4kzjyp2zMGZeRYHeaZWtiAzYxHnM0TqT0AemNjHQiBmKK4FRHVJZv/WBHTMgysHhTGX9BGpMhf8MbQTKGqp3dFCWpRTQaJmkXjIAUWIiku/AsnSSt3jHDmOV6DfWfCsH7mCOKzTpfyFabofFBvlk15YnF63k+oZ32joooiW4LTvHKEl0CiF34Li2ZjhKKb8UYk/sD3cIMXmwz3/Vk5LJXJGr3KPRT4ieLP9d4sQnU5y10loRcQwny0EyQ1h0Qn16a6zu2CLnyYMVqUi/aT/K3pd1QU9UNVuD60kWovAtZSGfV1Bo/9qVzq9N/XDqc9if7Mqz9BW5ACSoSnVvTCr5kVyBu481r3TXksxPN1oMjPEEy64yfP2knrkirzbGPPccgyU9msGHX7BqgfHjhxqsTUO/Eizbdqr8jPmnLvSadL3O066dWp77nZttsWdN5b7T5of+5Lx+fD88QzQOB0rFnTqEMxVrDksJHkHQFcMM1AhZgKwU/f2pdZx5w8IYlzIi2LU38+1F3+Gp2kHI2MDswHzAHBgUrDgMCGgQUkKToH/rrUqQ2geM+uPWVxl9CHisEFNeeNOvM8HQnOIaM9fLB2fm3kbMbAgIH0A==";

            var digitalCertificate = new DigitalCertificate();

            digitalCertificate.PrivateKey = Convert.FromBase64String(privateKeyBase64);
            digitalCertificate.PublicKey = Convert.FromBase64String(publicKeyBase64);

            context.DigitalCertificate.AddOrUpdate(digitalCertificate);
            context.SaveChanges();
        }
    }
}
